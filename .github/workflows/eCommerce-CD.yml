#CD Pipeline 
name: eCommerce - Continuous Deployment

on:
  push:
    branches: [ "development", "main", "kubernetes_cd_pipeline" ]

jobs:
  docker_hub_deploy:
    name: Docker image deploy
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Login to Docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push APIGateway image
        uses: docker/build-push-action@v5
        with:
          file: ././eCommerce/Microservices/APIGateway/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ecommerce-api-gateway:latest

      - name: Build and push AuthService image
        uses: docker/build-push-action@v5
        with:
          file: ././eCommerce/Microservices/AuthService/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ecommerce-authentication:latest

      - name: Build and push CartService image
        uses: docker/build-push-action@v5
        with:
          file: ././eCommerce/Microservices/CartService/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ecommerce-cart:latest

      - name: Build and push ProductService image
        uses: docker/build-push-action@v5
        with:
          file: ././eCommerce/Microservices/ProductService/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ecommerce-product:latest

      - name: Build and push UserService image
        uses: docker/build-push-action@v5
        with:
          file: ././eCommerce/Microservices/UserService/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ecommerce-user:latest
          
  azure_kubernetes_deploy:
    name: Azure Kubernetes deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Kubectl
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Deploy
        run: |
          kubectl apply -f "https://github.com/rabbitmq/cluster-operator/releases/latest/download/cluster-operator.yml"
          kubectl apply -f ././eCommerce/Shared/Messaging/rabbitmq.k8s.yml
          kubectl apply -f ././eCommerce/Shared/Cache/redis.k8s.yml
          kubectl apply -f ././eCommerce/Microservices/ProductService/Kubernetes/productservice.deploy.k8s.yml
          kubectl apply -f ././eCommerce/Microservices/ProductService/Kubernetes/productservice.service.k8s.yml
          kubectl apply -f ././eCommerce/Microservices/ProductService/Kubernetes/productservice.storage.k8s.yml
          kubectl apply -f ././eCommerce/Microservices/UserService/Kubernetes/userservice.deploy.k8s.yml
          kubectl apply -f ././eCommerce/Microservices/UserService/Kubernetes/userservice.service.k8s.yml
          kubectl apply -f ././eCommerce/Microservices/UserService/Kubernetes/userservice.storage.k8s.yml
          kubectl apply -f ././eCommerce/Microservices/AuthService/Kubernetes/authservice.deploy.k8s.yml
          kubectl apply -f ././eCommerce/Microservices/AuthService/Kubernetes/authservice.service.k8s.yml
          kubectl apply -f ././eCommerce/Microservices/AuthService/Kubernetes/authservice.storage.k8s.yml
          kubectl apply -f ././eCommerce/Microservices/CartService/Kubernetes/cartservice.deploy.k8s.yml
          kubectl apply -f ././eCommerce/Microservices/CartService/Kubernetes/cartservice.service.k8s.yml
          kubectl apply -f ././eCommerce/Microservices/CartService/Kubernetes/cartservice.storage.k8s.yml
          
